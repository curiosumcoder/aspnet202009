@model CategoryIndexViewModel
@using Microsoft.AspNetCore.Http.Extensions

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form method="post" id="form1">
    <div class="d-flex flex-column">
        <div>
            <input asp-for="Command" type="hidden" />
            <input asp-for="Filter.CategoryName" placeholder="Search here ..." />
            <input asp-for="Paging.Page" type="hidden" />
            <input asp-for="Paging.Sort" type="hidden" />
            <input asp-for="Paging.SortDir" type="hidden" />
            <button data-command="search">Search</button>
        </div>
        <div>
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            @*@Html.DisplayNameFor(m => m.CategoryName)*@
                            <button data-sort="CategoryName" data-command="order">CategoryName</button>
                        </th>
                        <th>
                            @*@Html.DisplayNameFor(model => model.Description)*@
                            <button data-sort="Description" data-command="order">Description</button>
                        </th>
                        <th>
                            @*@Html.DisplayNameFor(model => model.Picture)*@
                            Picture
                        </th>
                        <th></th>
                    </tr>
                </thead>
                @{await Html.RenderPartialAsync("IndexTable");}
            </table>
        </div>
    </div>
</form>

@Model.Paging.Count

<script>

    (function enableGrid(formId) {

        // Primera forma asin AJAX, usar method='get'
        let commands = document.querySelectorAll(`#${formId} button[data-command]`);
        commands.forEach(c => {
            c.addEventListener('click', function (event) {
                //event.preventDefault();
                let cm = this.dataset.command;

                const command = document.querySelector(`#${formId} input[name="Command"]`);
                command.value = cm;

                switch (cm) {
                    case 'search':
                        const page1 = document.querySelector(`#${formId} input[name="Paging.Page"]`);
                        page1.value = 1;
                        break;
                    case 'paging':
                        const page2 = document.querySelector(`#${formId} input[name="Paging.Page"]`);
                        page2.value = this.dataset.page;
                        break;
                    case 'order':
                        const sort = document.querySelector(`#${formId} input[name="Paging.Sort"]`);
                        const sortDir = document.querySelector(`#${formId} input[name="Paging.SortDir"]`);

                        if (sort.value !== this.dataset.sort) {
                            sort.value = this.dataset.sort;
                            sortDir.value = 'ASC';
                        }
                        else {
                            sortDir.value = sortDir.value === 'ASC' ? 'DESC' : 'ASC';
                        }
                        break;
                }
            });
        });

        // Segunda forma con AJAX
        let form = document.getElementById(formId);
        form.addEventListener('submit', async (event) => {
            event.preventDefault();

            let fd = new FormData(form);

            //console.log('submit');
            //console.log(fd);

            const response = await fetch(window.location.href, {
                method: 'POST',
                headers: {
                    'X-Requested-With': 'fetch'
                },
                body: fd
            });

            console.log(response);

            if (response.ok) {
                let text = await response.text();
                console.log(text);

                // Actualizar el DOM
                const tbody = document.querySelector(`#${formId} table > tbody`);
                tbody.remove();
                const tfoot = document.querySelector(`#${formId} table > tfoot`);
                tfoot.remove();

                // Determinar el lugar en donde colocar el resultado
                const thead = document.querySelector(`#${formId} table > thead`);
                console.log(thead);
                thead.insertAdjacentHTML('afterend', text);

                // TODO Enlazar los clic del paginador
                // TODO Buscar encapsular
                // TODO Indicador de procesamiento
                // TODO Habilitar el funcionamiento sin AJAX con GET, o con AJAX con POST
            }
        });

    })('form1');

</script>